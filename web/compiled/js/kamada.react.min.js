var Modal = ReactBootstrap.Modal;
var FormGroup = ReactBootstrap.FormGroup
var HelpBlock = ReactBootstrap.HelpBlock;
var ControlLabel = ReactBootstrap.ControlLabel;
var FormControl = ReactBootstrap.FormControl;

var KamadaMemberCreateModal = React.createClass({displayName: "KamadaMemberCreateModal",

    getInitialState: function () {
        return {
            form: {
                data: {
                    proVoterId: null,
                    cellphone: "",
                    voterGroup: "",
                    municipalityNo : "",
                    barangayNo : "",
                    batchNo : ""
                },
                errors: []
            }
        };
    },

    componentDidMount: function () {
        this.initSelect2();
    },

    initSelect2: function () {
        var self = this;

        $("#kamada-member-form #municipality_select2").select2({
            casesentitive: false,
            placeholder: "Select City/Municipality",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_municipality'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        provinceCode: 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.municipality_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#kamada-member-form #barangay_select2").select2({
            casesentitive: false,
            placeholder: "Select Barangay",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_barangay'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        municipalityNo: $("#kamada-member-form #municipality_select2").val(),
                        provinceCode: 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.brgy_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#kamada-member-form #form-voter-select2").select2({
            casesentitive: false,
            placeholder: "Enter Name...",
            allowClear: true,
            delay: 1000,
            width: '100%',
            containerCssClass: ':all:',
            dropdownCssClass: "custom-option",
            ajax: {
                url: Routing.generate('ajax_select2_project_voters'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        proId: self.props.proId,
                        electId: self.props.electId,
                        provinceCode: 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            var text = item.voter_name + ' - ' + item.precinct_no + ' ( ' + item.municipality_name + ', ' + item.barangay_name + ' )';
                            return { id: item.pro_voter_id, text: text };
                        })
                    };
                },
            }
        });

        
        $("#kamada-member-form #voter_group_select2").select2({
            casesentitive: false,
            placeholder: "Select Position",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_voter_group'),
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.voter_group, text: item.voter_group };
                        })
                    };
                },
            }
        });

          
        $("#kamada-member-form #batch_select2").select2({
            casesentitive: false,
            placeholder: "Select Batch",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            tags: true,
            createTag: function (params) {
                return {
                    id: params.term,
                    text: params.term,
                    newOption: true
                }
            },
            ajax: {
                url: Routing.generate('ajax_select2_kamada_batch_no'),
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.batch_no, text: item.batch_no };
                        })
                    };
                },
            }
        });


        $("#form-voter-select2").on("change", function () {
            self.loadVoter(self.props.proId, $(this).val());
        });

        $("#kamada-member-form #municipality_select2").on("change", function () {
            self.setFieldValue("municipalityNo", $(this).val());
        });

        $("#kamada-member-form #barangay_select2").on("change", function () {
            self.setFieldValue("barangayNo", $(this).val());
        });

        $("#kamada-member-form #voter_group_select2").on("change", function () {
            self.setFieldValue("voterGroup", $(this).val());
        });

        $("#kamada-member-form #batch_select2").on("change", function () {
            self.setFieldValue("batchNo", $(this).val());
        });

        $("#kamada-member-form #municipality_select2").empty()
            .append($("<option/>")
                .val(this.props.municipalityNo)
                .text(this.props.municipalityName))
            .trigger("change");

        $("#kamada-member-form #barangay_select2").empty()
            .append($("<option/>")
                .val(this.props.barangayNo)
                .text(this.props.barangayName))
            .trigger("change");

    },

    loadVoter: function (proId, proVoterId) {
        var self = this;
        self.requestVoter = $.ajax({
            url: Routing.generate("ajax_get_project_voter", { proId: proId, proVoterId: proVoterId }),
            type: "GET"
        }).done(function (res) {

            var form = self.state.form;
            form.data.proVoterId = res.proVoterId;
            form.data.cellphone = self.isEmpty(res.cellphoneNo) ? '' : res.cellphoneNo;
            form.data.voterGroup = res.voterGroup;

            $("#kamada-member-form #voter_group_select2").empty()
                .append($("<option/>")
                    .val(res.voterGroup)
                    .text(res.voterGroup))
                .trigger("change");

            self.setState({ form: form });
        });

        var form = self.state.form;

        form.data.proVoterId = null;
        form.data.cellphone = '';
        form.data.voterGroup = '';

        self.setState({ form: form })
    },

    reset: function () {
        var form = this.state.form;
        form.data.proVoterId = null;
        form.data.cellphone = '';
        form.data.voterGroup = '';

        form.errors = [];

        $("#kamada-member-form #voter_group_select2").empty().trigger("change");
        $("#kamada-member-form #form-voter-select2").empty().trigger("change");

        this.setState({ form: form });
    },

    setFormProp: function (e) {
        var form = this.state.form;
        form.data[e.target.name] = e.target.value;
        this.setState({ form: form });
    },

    setFieldValue: function (field, value) {
        var form = this.state.form;
        form.data[field] = value;
        this.setState({ form: form });
    },

    setNewProfile: function (data) {
        var self = this;

        $("#form-voter-select2").empty()
            .append($("<option/>")
                .val(data.proVoterId)
                .text(data.voterName))
            .trigger("change")
    },

    setErrors: function (errors) {
        var form = this.state.form;
        form.errors = errors;

        this.setState({ form: form });
    },

    getError: function (field) {
        var errors = this.state.form.errors;
        for (var errorField in errors) {
            if (errorField == field)
                return errors[field];
        }
        return null;
    },

    getValidationState: function (field) {
        return this.getError(field) != null ? 'error' : '';
    },

    isEmpty: function (value) {
        return value == null || value == '';
    },


    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    submit: function (e) {
        e.preventDefault();

        var self = this;
        var data = self.state.form.data;

        data.hdrId = self.props.hdrId;
        data.proId = self.props.proId;
        data.electId = self.props.electId;

        self.requestAddAttendee = $.ajax({
            url: Routing.generate("ajax_post_kamada_detail"),
            type: "POST",
            data: data
        }).done(function (res) {
            self.reset();
            self.props.onSuccess();
            self.notify("Member has been added.", "teal");
        }).fail(function (err) {
            self.notify("Form Validation Failed.", "ruby");
            self.setErrors(err.responseJSON);
        });
    },

    closeNewVoterCreateModal: function () {
        this.setState({ showNewVoterCreateModal: false });
    },

    openNewVoterCreateModal: function () {
        this.setState({ showNewVoterCreateModal: true })
    },

    render: function () {
        var self = this;
        var data = self.state.form.data;

        return (
            React.createElement(Modal, {keyboard: false, enforceFocus: false, bsSize: "lg", backdrop: "static", show: this.props.show, onHide: this.props.onHide}, 
                React.createElement(Modal.Header, {className: "modal-header bg-blue-dark font-white", closeButton: true}, 
                    React.createElement(Modal.Title, null, "Household Member Form")
                ), 
                React.createElement(Modal.Body, {bsClass: "modal-body overflow-auto"}, 

                    
                        this.state.showNewVoterCreateModal &&
                        React.createElement(VoterTemporaryCreateModal, {
                            proId: 3, 
                            electId: 423, 
                            provinceCode: 53, 
                            show: this.state.showNewVoterCreateModal, 
                            onHide: this.closeNewVoterCreateModal, 
                            onSuccess: this.setNewProfile, 

                            municipalityNo: this.props.municipalityNo, 
                            municipalityName: this.props.municipalityName, 
                            barangayNo: this.props.barangayNo, 
                            barangayName: this.props.barangayName}
                        ), 
                    

                    React.createElement("form", {id: "kamada-member-form", onSubmit: this.submit}, 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formMunicipalityNo", validationState: this.getValidationState('municipalityNo')}, 
                                    React.createElement(ControlLabel, null, " Municipality : "), 
                                    React.createElement("select", {id: "municipality_select2", className: "form-control form-filter input-sm", name: "municipalityNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('municipalityNo'))
                                )
                            ), 

                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formBrgyNo", validationState: this.getValidationState('barangayNo')}, 
                                    React.createElement(ControlLabel, null, " Barangay : "), 
                                    React.createElement("select", {id: "barangay_select2", className: "form-control form-filter input-sm", name: "brgyNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('barangayNo'))
                                )
                            )
                        ), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-8"}, 
                                React.createElement(FormGroup, {controlId: "formProVoterId", validationState: this.getValidationState('proVoterId')}, 
                                    React.createElement(ControlLabel, null, " Member Name : "), 
                                    React.createElement("select", {id: "form-voter-select2", className: "form-control input-sm"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('proVoterId'))
                                )
                            ), 

                            React.createElement("div", {className: "col-md-2"}, 
                                React.createElement("button", {style: { marginTop: "25px"}, onClick: this.openNewVoterCreateModal, className: "btn btn-primary btn-sm", type: "button"}, " New Voter ")
                            )
                        ), 


                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formCellphone", validationState: this.getValidationState('cellphone')}, 
                                    React.createElement(ControlLabel, null, " Cellphone No : "), 
                                    React.createElement("input", {type: "text", placeholder: "Example : 09283182013", value: this.state.form.data.cellphone, className: "input-sm form-control", onChange: this.setFormProp, name: "cellphone"}), 
                                    React.createElement(HelpBlock, null, this.getError('cellphone'))
                                )
                            ), 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formBatch", validationState: this.getValidationState('voterGroup')}, 
                                    React.createElement(ControlLabel, null, " Position : "), 
                                    React.createElement("select", {id: "voter_group_select2", className: "form-control form-filter input-sm", name: "batchNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('voterGroup'))
                                )
                            ), 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formBatch", validationState: this.getValidationState('batchNo')}, 
                                    React.createElement(ControlLabel, null, " Batch No. : "), 
                                    React.createElement("select", {id: "batch_select2", className: "form-control form-filter input-sm", name: "batchNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('batchNo'))
                                )
                            )
                        ), 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-12 text-right"}, 
                                React.createElement("button", {className: "btn btn-primary btn-sm", disabled: this.isEmpty(this.state.form.data.proVoterId), type: "submit"}, " Submit "), 
                                React.createElement("button", {className: "btn btn-default btn-sm", type: "button", onClick: this.props.onHide}, " Close ")
                            )
                        )
                    )
                )
            )
        );
    }
});


window.KamadaMemberCreateModal = KamadaMemberCreateModal;

var KamadaDetailDatatable = React.createClass({displayName: "KamadaDetailDatatable",

    getInitialState: function () {
        return {
            target: null,
            typingTimer: null,
            doneTypingInterval: 1500,
            showEditModal: false
        }
    },

    componentDidMount: function () {
        this.initDatatable(this.props.hdrId);
    },

    initDatatable: function (hdrId) {
        var self = this;
        var grid = new Datatable();

        var kamada_detail_datatable = $("#kamada_detail_datatable");
        var grid_project_event = new Datatable();

        var url = Routing.generate("ajax_get_datatable_kamada_detail", { hdrId: hdrId }, true);

        grid_project_event.init({
            src: kamada_detail_datatable,
            loadingMessage: 'Loading...',
            "dataTable": {
                "bState": true,
                "autoWidth": true,
                "deferRender": true,
                "ajax": {
                    "url": url,
                    "type": 'GET',
                    "data": function (d) {
                        d.provinceCode = '53';
                        d.voterName = $('#kamada_detail_datatable input[name="voterName"]').val();
                        d.barangayName = $('#kamada_detail_datatable input[name="barangayName"]').val();
                        d.hdrId = self.props.hdrId;
                    }
                },
                "columnDefs": [{
                    'orderable': false,
                    'targets': [0, 2, 3, 4, 5]
                }, {
                    'className': 'align-center',
                    'targets': [0, 3]
                }],
                "order": [
                    [1, "desc"]
                ],
                "columns": [
                    {
                        "data": null,
                        "className": "text-center",
                        "width": 20,
                        "render": function (data, type, full, meta) {
                            return meta.settings._iDisplayStart + meta.row + 1;
                        }
                    },
                    {
                        "data": "voter_name",
                        "className": "text-left"
                    },
                    {
                        "data": "voter_group",
                        "className": "text-center",
                        "width": 100
                    },
                    {
                        "data": "batch_no",
                        "className": "text-center",
                        "width": 100
                    },
                    {
                        "data": "barangay_name",
                        "className": "text-center",
                        "width": 150
                    },
                    {
                        "data": "cellphone",
                        "className": "text-center",
                        "width": 100,
                    },

                    {
                        "width": 60,
                        "className" : "text-center",
                        "render": function (data, type, row) {
                            var deleteBtn = "<a href='javascript:void(0);' class='btn btn-xs font-white bg-red-sunglo delete-button' data-toggle='tooltip' data-title='Delete'><i class='fa fa-trash' ></i></a>";
                            var editBtn = "<a href='javascript:void(0);' class='btn btn-xs font-white bg-primary edit-button' data-toggle='tooltip' data-title='Edit'><i class='fa fa-edit' ></i></a>";

                            return deleteBtn;
                        }
                    }
                ],
            }
        });


        kamada_detail_datatable.on('click', '.delete-button', function () {
            var data = grid_project_event.getDataTable().row($(this).parents('tr')).data();
            self.delete(data.id);
        });

        // kamada_detail_datatable.on('click', '.edit-button', function () {
        //     var data = grid_project_event.getDataTable().row($(this).parents('tr')).data();
        //     self.edit(data.voter_id);
        // });

        self.grid = grid_project_event;
    },

    edit: function (voterId) {
        this.setState({ showEditModal: true, target: voterId })
    },

    closeEditModal: function () {
        this.reload();
        this.setState({ showEditModal: false, target: null });
    },

    delete: function (id) {
        var self = this;

        if (confirm("Are you sure you want to remove this member ?")) {
            self.requestDelete = $.ajax({
                url: Routing.generate("ajax_delete_kamada_detail", { id: id }),
                type: "DELETE"
            }).done(function (res) {
                self.reload();
            });
        }
    },

    handleFilterChange: function () {
        var self = this;
        clearTimeout(this.state.typingTimer);
        this.state.typingTimer = setTimeout(function () {
            self.reload();
        }, this.state.doneTypingInterval);
    },

    reload: function () {
        this.grid.getDataTable().ajax.reload();
    },

    reloadFiltered: function (precinctNo) {
        var self = this;
        $('#kamada_detail_datatable input[name="assignedPrecinct"]').val(precinctNo);

        setTimeout(function () {
            self.grid.getDataTable().ajax.reload();
        });
    },

    isEmpty: function (value) {
        return value == null || value == "" || value == "undefined" || value <= 0;
    },


    handleFilterChange: function () {
        var self = this;
        clearTimeout(this.state.typingTimer);
        this.state.typingTimer = setTimeout(function () {
            self.reload();
        }, this.state.doneTypingInterval);
    },

    render: function () {
        return (
            React.createElement("div", null, 

                this.state.showEditModal &&
                    React.createElement(VoterEditModal, {
                        show: this.state.showEditModal, 
                        onHide: this.closeEditModal, 
                        notify: this.props.notify, 
                        voterId: this.state.target, 
                        proId: this.props.proId}
                    ), 
                

                React.createElement("div", {className: "table-container", style: { marginTop: "20px"}}, 
                    React.createElement("table", {id: "kamada_detail_datatable", className: "table table-striped table-bordered", width: "100%"}, 
                        React.createElement("thead", null, 
                            React.createElement("tr", null, 
                                React.createElement("th", null, "No"), 
                                React.createElement("th", null, "Name"), 
                                React.createElement("th", null, "Position"), 
                                React.createElement("th", null, "Batch No"), 
                                React.createElement("th", null, "Barangay"), 
                                React.createElement("th", null, "Cellphone #"), 
                                React.createElement("th", null, "Actions")
                            ), 
                            React.createElement("tr", null, 
                                React.createElement("td", null), 
                                React.createElement("td", {style: { padding: "10px 5px"}}, 
                                    React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "voterName", onChange: this.handleFilterChange})
                                ), 
                                React.createElement("td", null, 
                                    React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "voterGroup", onChange: this.handleFilterChange})
                                ), 
                                React.createElement("td", null, 
                                    React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "batchNo", onChange: this.handleFilterChange})
                                ), 
                                React.createElement("td", null, 
                                    React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "barangayName", onChange: this.handleFilterChange})
                                ), 
                                React.createElement("td", null), 
                                React.createElement("td", null)
                            )
                        ), 
                        React.createElement("tbody", null
                        )
                    )
                )
            )
        )
    }
});

window.KamadaDetailDatatable = KamadaDetailDatatable;
var Modal = ReactBootstrap.Modal;
var FormGroup = ReactBootstrap.FormGroup
var HelpBlock = ReactBootstrap.HelpBlock;
var ControlLabel = ReactBootstrap.ControlLabel;
var FormControl = ReactBootstrap.FormControl;

var KamadaMemberModal = React.createClass({displayName: "KamadaMemberModal",
    getInitialState: function () {
        return {
            member: null,
            showAddMemberModal: false,
            header: {
                householdCode: "",
                voterName: "",
                barangayName: "",
                municipalityName: "",
                cellphone: ""

            }
        }
    },

    render: function () {
        var self = this;
        var data = self.state.header;

        return (
            React.createElement(Modal, {style: { marginTop: "10px"}, keyboard: false, bsSize: "lg", enforceFocus: false, backdrop: "static", show: this.props.show, onHide: this.props.onHide}, 
                React.createElement(Modal.Header, {className: "modal-header bg-blue-dark font-white", closeButton: true}, 
                    React.createElement(Modal.Title, null, data.voterName, " ")
                ), 
                React.createElement(Modal.Body, {bsClass: "modal-body overflow-auto"}, 
                    React.createElement("div", {className: "col-md-12", style: { paddingLeft: "0px", marginBottom: "10px"}}, 
                        React.createElement("button", {onClick: this.openAddMemberModal, type: "button", className: "btn btn-sm btn-primary"}, "Add Member")
                    ), 
                    
                        this.state.showAddMemberModal &&
                        React.createElement(KamadaMemberCreateModal, {
                            proId: self.props.proId, 
                            provinceCode: 53, 
                            municipalityNo: this.state.header.municipalityNo, 
                            municipalityName: this.state.header.municipalityName, 
                            barangayNo: this.state.header.barangayNo, 
                            barangayName: this.state.header.barangayName, 

                            electId: self.props.electId, 
                            hdrId: this.props.id, 
                            show: this.state.showAddMemberModal, 
                            notify: this.props.notify, 
                            onSuccess: this.reloadDatatable, 
                            onHide: this.closeAddMemberModal}
                        ), 
                    
                    React.createElement(KamadaDetailDatatable, {ref: "DetailDatatable", hdrId: this.props.id})
                )
            )
        );
    },

    componentDidMount: function () {
        this.loadHeader(this.props.id);
    },

    loadHeader: function (id) {
        var self = this;

        self.requestRecruiter = $.ajax({
            url: Routing.generate("ajax_get_kamada_header", { id: id }),
            type: "GET"
        }).done(function (res) {
            self.setState({ header: res });
        });
    },

    setFormProp: function (e) {
        let header = this.state.header;
        header[e.target.name] = e.target.value;

        this.setState({ header: header });
    },

    reloadDatatable: function () {
        this.refs.DetailDatatable.reload();
    },

    openAddMemberModal: function () {
        console.log("showing add member modal");
        this.setState({ showAddMemberModal: true })
    },

    closeAddMemberModal: function () {
        this.setState({ showAddMemberModal: false });
    }
});


window.KamadaMemberModal = KamadaMemberModal;
var Modal = ReactBootstrap.Modal;
var FormGroup = ReactBootstrap.FormGroup
var HelpBlock = ReactBootstrap.HelpBlock;
var ControlLabel = ReactBootstrap.ControlLabel;
var FormControl = ReactBootstrap.FormControl;

var KamadaCreateModal = React.createClass({displayName: "KamadaCreateModal",

    getInitialState: function () {
        return {
            form: {
                data: {
                    electId: 3,
                    proVoterId: null,
                    isTagalog: 0,
                    isBisaya: 0,
                    isCuyonon: 0,
                    isIlonggo: 0,
                    isCatholic: 0,
                    isInc: 0,
                    isIslam: 0
                },
                errors: []
            },
            provinceCode: 53,
            showNewVoterCreateModal: false
        };
    },

    render: function () {
        var self = this;
        var data = this.state.form.data;

        return (
            React.createElement(Modal, {style: { marginTop: "10px"}, keyboard: false, bsSize: "lg", enforceFocus: false, backdrop: "static", show: this.props.show, onHide: this.props.onHide}, 
                React.createElement(Modal.Header, {className: "modal-header bg-blue-dark font-white", closeButton: true}, 
                    React.createElement(Modal.Title, null, "New Record Form")
                ), 
                React.createElement(Modal.Body, {bsClass: "modal-body overflow-auto"}, 

                    
                        this.state.showNewVoterCreateModal &&
                        React.createElement(VoterTemporaryCreateModal, {
                            proId: this.props.proId, 
                            electId: this.props.electId, 
                            provinceCode: this.props.provinceCode, 
                            show: this.state.showNewVoterCreateModal, 
                            notify: this.props.notify, 
                            onHide: this.closeNewVoterCreateModal}
                        ), 
                    

                    React.createElement("form", {id: "kamada-create-form", onSubmit: this.submit}, 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-3"}, 

                                React.createElement(FormGroup, {controlId: "formBarangay", validationState: this.getValidationState('barangayNo')}, 
                                    React.createElement("label", {className: "control-label"}, "City/Municipality"), 
                                    React.createElement("select", {id: "municipality_select2", className: "form-control form-filter input-sm", name: "municipalityNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('municipalityNo'))
                                )
                            ), 

                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formBarangay", validationState: this.getValidationState('barangayNo')}, 
                                    React.createElement("label", {className: "control-label"}, "Barangay"), 
                                    React.createElement("select", {id: "barangay_select2", className: "form-control form-filter input-sm", name: "brgyNo"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('barangayNo'))
                                )
                            ), 
                            React.createElement("div", {className: "col-md-5"}, 
                                React.createElement(FormGroup, {controlId: "formTlProVoterId", validationState: this.getValidationState('tlProVoterId')}, 
                                    React.createElement(ControlLabel, null, " Top Leader Name : "), 
                                    React.createElement("select", {id: "top-leader-select2", className: "form-control input-sm"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('tlProVoterId'))
                                )
                            )
                        ), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-6"}, 
                                React.createElement(FormGroup, {controlId: "formProVoterId", validationState: this.getValidationState('proVoterId')}, 
                                    React.createElement(ControlLabel, null, " Leader Name : "), 
                                    React.createElement("select", {id: "leader-select2", className: "form-control input-sm"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('proVoterId'))
                                )
                            ), 

                            React.createElement("div", {className: "col-md-2"}, 
                                React.createElement("button", {style: { marginTop: "26px"}, onClick: this.openNewVoterCreateModal, className: "btn btn-primary btn-sm", type: "button"}, " Add Non-Voter ")
                            )
                        ), 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement(FormGroup, {controlId: "formCellphoneNo", validationState: this.getValidationState('cellphone')}, 
                                    React.createElement(ControlLabel, null, " Cellphone No : "), 
                                    React.createElement("input", {type: "text", placeholder: "Example : 09283182013", value: this.state.form.data.cellphoneNo, className: "input-sm form-control", onChange: this.setFormProp, name: "cellphoneNo"}), 
                                    React.createElement(HelpBlock, null, this.getError('cellphone'))
                                )
                            ), 
                            React.createElement("div", {className: "col-md-3"}, 
                                React.createElement("div", {className: "form-group"}, 
                                    React.createElement("label", {className: "control-label"}, "Position"), 
                                    React.createElement("select", {id: "voter_group_select2", className: "form-control form-filter input-sm", name: "voterGroup"}
                                    ), 
                                    React.createElement(HelpBlock, null, this.getError('voterGroup'))
                                )
                            )
                        ), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-md-12 text-right"}, 
                                React.createElement("button", {className: "btn btn-primary btn-sm", style: { marginRight: "10px"}, type: "submit"}, " Submit "), 
                                React.createElement("button", {className: "btn btn-default btn-sm", type: "button", onClick: this.props.onHide}, " Close ")
                            )
                        )

                    )
                )
            )
        );
    },

    componentDidMount: function () {
        this.initSelect2();
    },

    initSelect2: function () {
        var self = this;

        $("#kamada-create-form #municipality_select2").select2({
            casesentitive: false,
            placeholder: "Select City/Municipality",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_municipality'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        provinceCode: self.state.provinceCode
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.municipality_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#kamada-create-form #barangay_select2").select2({
            casesentitive: false,
            placeholder: "Select Barangay",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_barangay'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        municipalityNo: $("#kamada-create-form #municipality_select2").val(),
                        provinceCode: self.state.provinceCode
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.brgy_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#kamada-create-form #leader-select2").select2({
            casesentitive: false,
            placeholder: "Enter Name...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            dropdownCssClass: 'custom-option',
            ajax: {
                url: Routing.generate('ajax_select2_project_voters'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        electId : 423,
                        provinceCode : 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            var voterStatus = parseInt(item.is_non_voter) == 0 ? "V" : "NV";
                            var position = (item.position == null || item.position == '') ? "No Household" : item.position;
                            var text = item.voter_name + ' ( ' + item.municipality_name + ', ' + item.barangay_name + ' ) - ' + voterStatus + '|' + position;

                            return { id: item.pro_voter_id, text: text };
                        })
                    };
                },
            }
        });


        $("#kamada-create-form #top-leader-select2").select2({
            casesentitive: false,
            placeholder: "Enter Name...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            dropdownCssClass: 'custom-option',
            ajax: {
                url: Routing.generate('ajax_select2_project_voters'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        electId : 423,
                        provinceCode : 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            var voterStatus = parseInt(item.is_non_voter) == 0 ? "V" : "NV";
                            var position = (item.position == null || item.position == '') ? "No Household" : item.position;
                            var text = item.voter_name + ' ( ' + item.municipality_name + ', ' + item.barangay_name + ' ) - ' + voterStatus + '|' + position;

                            return { id: item.pro_voter_id, text: text };
                        })
                    };
                },
            }
        });

        $("#kamada-create-form #voter_group_select2").select2({
            casesentitive: false,
            placeholder: "Select Position",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_voter_group'),
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.voter_group, text: item.voter_group };
                        })
                    };
                },
            }
        });

        $("#kamada-create-form #municipality_select2").on("change", function () {
            self.setFormPropValue('municipalityNo', $(this).val());
        });

        $("#kamada-create-form #barangay_select2").on("change", function () {
            self.setFormPropValue('barangayNo', $(this).val());
        });

        $("#kamada-create-form #leader-select2").on("change", function () {
            self.loadVoter(self.props.proId, $(this).val());
        });

        $("#kamada-create-form #top-leader-select2").on("change", function () {
            self.setFormPropValue("tlProVoterId",$(this).val());
        });
    },

    loadVoter: function (proId, proVoterId) {
        var self = this;
        self.requestVoter = $.ajax({
            url: Routing.generate("ajax_get_project_voter", { proId: proId, proVoterId: proVoterId }),
            type: "GET"
        }).done(function (res) {


            var form = self.state.form;
            form.data.proVoterId = res.proVoterId;
            form.data.voterName = res.voterName;
            form.data.cellphone = res.cellphone;
            form.data.voterGroup = res.voterGroup;

            $("#kamada-create-form #voter_group_select2").empty()
                .append($("<option/>")
                    .val(res.voterGroup)
                    .text(res.voterGroup))
                .trigger("change");


            self.setState({ form: form });
        });

        var form = self.state.form;

        form.data.proVoterId = null;
        form.data.cellphone = '';
        form.data.voterName = '';
        form.data.voterGroup = '';

        self.setState({ form: form })
    },


    setFormPropValue: function (field, value) {
        var form = this.state.form;
        form.data[field] = value;
        this.setState({ form: form });
    },

    setFormProp: function (e) {
        var form = this.state.form;
        form.data[e.target.name] = e.target.value;
        this.setState({ form: form });
    },

    setFormCheckProp: function (e) {
        var form = this.state.form;
        form.data[e.target.name] = e.target.checked ? 1 : 0;
        this.setState({ form: form })
    },

    setErrors: function (errors) {
        var form = this.state.form;
        form.errors = errors;
        this.setState({ form: form });
    },

    getError: function (field) {
        var errors = this.state.form.errors;
        for (var errorField in errors) {
            if (errorField == field)
                return errors[field];
        }
        return null;
    },

    getValidationState: function (field) {
        return this.getError(field) != null ? 'error' : '';
    },

    isEmpty: function (value) {
        return value == null || value == '';
    },

    reset: function () {
        var form = this.state.form;
        form.errors = [];

        this.setState({ form: form });
    },

    closeNewVoterCreateModal: function () {
        this.setState({ showNewVoterCreateModal: false });
    },

    openNewVoterCreateModal: function () {
        console.log('opening modal');
        this.setState({ showNewVoterCreateModal: true })
    },

    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    submit: function (e) {
        e.preventDefault();

        var self = this;
        var data = self.state.form.data;
        data.proId = self.props.proId;
        data.electId = self.props.electId;

        data.voterGroup = $("#kamada-create-form #voter_group_select2").val();
        data.position = $("#kamada-create-form #other_position_select2").val();

        self.requestPost = $.ajax({
            url: Routing.generate("ajax_post_kamada_header"),
            data: data,
            type: 'POST'
        }).done(function (res) {
            self.reset();
            self.props.reload();
            self.props.onHide();
            self.props.onSuccess(res.id);
            self.notify("New household has been created.", 'teal');
        }).fail(function (err) {
            self.setErrors(err.responseJSON);
            self.notify("Validation failed !", 'ruby');
        });
    }
});


window.KamadaCreateModal = KamadaCreateModal;
var KamadaDatatable = React.createClass({displayName: "KamadaDatatable",

    getInitialState: function () {
        return {
            showCreateModal: false,
            showEditModal: false,
            showRecruitsModal: false,
            showHouseholdSummary: false,
            target: null,
            typingTimer: null,
            municipalityNo: null,
            modalMunicipalityNo: null,
            doneTypingInterval: 1500,
            user: null,
            summary: null,
            filters: {
                electId: 423,
                provinceCode: 53,
                proId: 3
            }
        }
    },

    componentDidMount: function () {
        this.loadUser(window.userId);
        this.initSelect2();
        this.loadSummary();
    },

    loadUser: function (userId) {
        var self = this;

        self.requestUser = $.ajax({
            url: Routing.generate("ajax_get_user", { id: userId }),
            type: "GET"
        }).done(function (res) {
            self.setState({ user: res }, self.reinitSelect2);
        });
    },

    loadSummary: function (userId) {
        var self = this;

        self.requestUser = $.ajax({
            url: Routing.generate("ajax_m_get_household_voters_summary"),
            type: "GET"
        }).done(function (res) {
            console.log("summary has been received");
            self.setState({ summary: res });
        });
    },

    initSelect2: function () {
        var self = this;

        $("#handler_component #election_select2").select2({
            casesentitive: false,
            placeholder: "Select Election...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_elections'),
                data: function (params) {
                    return {
                        searchText: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.elect_id, text: item.elect_name };
                        })
                    };
                },
            }
        });

        $("#handler_component #project_select2").select2({
            casesentitive: false,
            placeholder: "Select Project...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_projects'),
                data: function (params) {
                    return {
                        searchText: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.pro_id, text: item.pro_name };
                        })
                    };
                },
            }
        });

        $("#handler_component #province_select2").select2({
            casesentitive: false,
            placeholder: "Enter Province...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_province_strict'),
                data: function (params) {
                    return {
                        searchText: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.province_code, text: item.name };
                        })
                    };
                },
            }
        });


        $("#kamada_table #municipality_select2").select2({
            casesentitive: false,
            placeholder: "Enter Name...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_municipality'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        provinceCode: 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.municipality_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#kamada_table #barangay_select2").select2({
            casesentitive: false,
            placeholder: "Enter name...",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_barangay'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        provinceCode: 53,
                        municipalityNo: $("#kamada_table #municipality_select2").val()
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.brgy_no, text: item.name };
                        })
                    };
                },
            }
        });

        $("#handler_component #election_select2").on("change", function () {
            var filters = self.state.filters;
            filters.electId = $(this).val();

            self.setState({ filters: filters }, self.reload);
        });

        $("#handler_component #project_select2").on("change", function () {
            var filters = self.state.filters;
            filters.proId = $(this).val();
            self.setState({ filters: filters }, self.reload);
        });

        $("#handler_component #province_select2").on("change", function () {
            var filters = self.state.filters;
            filters.provinceCode = $(this).val();
            self.setState({ filters: filters }, self.reload);
        });

        $("#kamada_table #municipality_select2").on("change", function () {
            self.handleFilterChange();
            self.setState({ municipalityNo: $(this).val() });
        });

        $("#kamada_table #barangay_select2").on("change", function () {
            self.handleFilterChange();
        });

    },

    reinitSelect2: function () {
        var self = this;

        if (!self.isEmpty(self.state.user.project)) {
            var provinceCode = self.state.user.project.provinceCode;

            self.requestProvince = $.ajax({
                url: Routing.generate("ajax_get_province", { provinceCode: provinceCode }),
                type: "GET"
            }).done(function (res) {
                $("#handler_component #province_select2").empty()
                    .append($("<option/>")
                        .val(res.province_code)
                        .text(res.name))
                    .trigger("change");
            });

            self.requestProject = $.ajax({
                url: Routing.generate("ajax_get_project", { proId: self.state.user.project.proId }),
                type: "GET"
            }).done(function (res) {
                $("#handler_component #project_select2").empty()
                    .append($("<option/>")
                        .val(res.proId)
                        .text(res.proName))
                    .trigger("change");

                self.initDatatable();
            });
        }

        self.requestActiveElection = $.ajax({
            url: Routing.generate("ajax_get_active_election"),
            type: "GET"
        }).done(function (res) {
            $("#handler_component #election_select2").empty()
                .append($("<option/>")
                    .val(res.electId)
                    .text(res.electName))
                .trigger("change");
        });

        if (!self.state.user.isAdmin) {
            $("#handler_component #election_select2").attr('disabled', 'disabled');
            $("#handler_component #province_select2").attr('disabled', 'disabled');
            $("#handler_component #project_select2").attr('disabled', 'disabled');
        }
    },

    initDatatable: function () {
        var self = this;
        var grid = new Datatable();

        var kamada_table = $("#kamada_table");
        var grid_project_recruitment = new Datatable();
        var url = Routing.generate("ajax_get_datatable_kamada_header", {}, true);

        grid_project_recruitment.init({
            src: kamada_table,
            loadingMessage: 'Loading...',
            "dataTable": {
                "pageLength": 100,
                "bState": true,
                "autoWidth": true,
                "deferRender": true,
                "ajax": {
                    "url": url,
                    "type": 'GET',
                    "data": function (d) {
                        d.voterName = $('#kamada_table input[name="voter_name"]').val();
                        d.voterGroup = $('#kamada_table input[name="voter_group"]').val();
                        d.municipalityNo = $('#kamada_table #municipality_select2').val();
                        d.barangayNo = $('#kamada_table #barangay_select2').val();
                        d.householdCode = $('#kamada_table input[name="household_code"]').val();
                        d.electId = self.state.filters.electId;
                    }
                },
                "columnDefs": [{
                    'orderable': false,
                    'targets': [0,1,2,3,4,5, 6, 7, 8]
                }, {
                    'className': 'align-center',
                    'targets': [2, 3]
                }],
                "order": [
                    [1, "asc"]
                ],
                "columns": [
                    {
                        "data": null,
                        "className": "text-center",
                        "width": 30,
                        "render": function (data, type, full, meta) {
                            return meta.settings._iDisplayStart + meta.row + 1;
                        }
                    },
                    {
                        "data": "voter_name"
                    },
                    { "data": "voter_group", "className": "text-center", width: 40 },
                    { "data": "municipality_name", "className": "text-center", width: 150 },
                    { "data": "barangay_name", width: 120 },
                    {
                        "data": "tl_voter_name",
                        "className": "text-center",
                        "width": 200
                    },
                    {
                        "data": "updated_at",
                        "className": "text-center",
                        "width": 80,
                        "render": function (data, type, row) {
                            console.log('updated at');
                            console.log(data);

                            return (data == "" || data == null) ? "" : moment(data).format("MMM Do YY");
                        }
                    },
                    {
                        "data": "updated_by",
                        "className": "text-center",
                        "width": 50
                    },
                    {
                        "width": 100,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            var recruitBtn = "<a href='javascript:void(0);' class='btn btn-xs font-white bg-green recruits-button' data-toggle='tooltip' data-title='Edit'><i class='fa fa-calendar'></i></a>";
                            var editBtn = "<a href='javascript:void(0);' class='btn btn-xs font-white bg-primary edit-button' data-toggle='tooltip' data-title='Edit'><i class='fa fa-edit'></i></a>";
                            var deleteBtn = "<a href='javascript:void(0);' class='btn btn-xs font-white bg-red-sunglo delete-button' data-toggle='tooltip' data-title='Delete'><i class='fa fa-trash' ></i></a>";
                            return editBtn + recruitBtn + deleteBtn;
                        }
                    }
                ],
            }
        });

        kamada_table.on('click', '.edit-button', function () {
            var data = grid_project_recruitment.getDataTable().row($(this).parents('tr')).data();
            self.setState({ showEditModal: true, target: data.id });
        })

        kamada_table.on('click', '.recruits-button', function () {
            var data = grid_project_recruitment.getDataTable().row($(this).parents('tr')).data();
            self.setState({ showRecruitsModal: true, target: data.id });
        });

        kamada_table.on('click', '.delete-button', function () {
            var data = grid_project_recruitment.getDataTable().row($(this).parents('tr')).data();
            self.delete(data.id);
        });

        self.grid = grid_project_recruitment;
    },


    openCreateModal: function () {
        this.setState({ showCreateModal: true });
    },

    closeCreateModal: function () {
        this.setState({ showCreateModal: false, target: null });
    },

    openEditModal: function () {
        this.setState({ showEditModal: true });
    },

    closeEditModal: function () {
        this.setState({ showEditModal: false, target: null });
    },

    closeRecruitsModal: function () {
        this.setState({ showRecruitsModal: false, target: null });
    },

    delete: function (id) {
        var self = this;

        if (confirm("Are you sure you want to delete this record ?")) {
            self.requestDelete = $.ajax({
                url: Routing.generate("ajax_delete_kamada_header", { id: id }),
                type: "DELETE"
            }).done(function (res) {
                self.reload();
            });
        }
    },

    openHouseholdSummary: function (municipalityNo) {
        console.log("modal municipalityNo ", municipalityNo);

        this.setState({ showHouseholdSummary: true, modalMunicipalityNo: municipalityNo });
    },

    closeHouseholdSummary: function () {
        this.setState({ showHouseholdSummary: false });
    },

    onCreateSuccess: function (id) {
        var self = this;
        self.setState({ showRecruitsModal: true, target: id });
    },

    handleFilterChange: function () {
        var self = this;

        clearTimeout(this.state.typingTimer);
        this.state.typingTimer = setTimeout(function () {
            self.reload();
        }, this.state.doneTypingInterval);
    },

    reload: function () {
        if (this.grid != null) {
            this.grid.getDataTable().ajax.reload();
        }
    },

    isEmpty: function (value) {
        return value == null || value == "" || value == "undefined" || value <= 0;
    },

    render: function () {
        let summary = this.state.summary;
        let self = this;

        return (
            React.createElement("div", null, 
                
                    this.state.showCreateModal &&
                    React.createElement(KamadaCreateModal, {
                        proId: this.state.filters.proId, 
                        electId: self.state.filters.electId, 
                        provinceCode: this.state.filters.provinceCode, 
                        show: this.state.showCreateModal, 
                        notify: this.props.notify, 
                        reload: this.reload, 
                        onHide: this.closeCreateModal, 
                        onSuccess: this.onCreateSuccess}
                    ), 
                

                
                    this.state.showEditModal &&
                    React.createElement(HouseholdEditModal, {
                        proId: this.state.filters.proId, 
                        electId: self.state.filters.electId, 
                        provinceCode: this.state.filters.provinceCode, 
                        show: this.state.showEditModal, 
                        notify: this.props.notify, 
                        reload: this.reload, 
                        onHide: this.closeEditModal, 
                        householdId: this.state.target}
                    ), 
                
                
                    this.state.showRecruitsModal &&
                    React.createElement(KamadaMemberModal, {
                        id: this.state.target, 
                        show: this.state.showRecruitsModal, 
                        reload: this.reload, 
                        onHide: this.closeRecruitsModal, 
                        proId: this.state.filters.proId, 
                        electId: self.state.filters.electId, 
                        notify: this.props.notify, 
                        onDataPatched: this.reload}
                    ), 
                

                
                    this.state.showHouseholdSummary &&
                    React.createElement(HouseholdSummaryModal, {
                        show: this.state.showHouseholdSummary, 
                        municipalityNo: this.state.modalMunicipalityNo, 
                        onHide: this.closeHouseholdSummary}
                    ), 
                

                React.createElement("div", {className: "col-md-6"}, 
                    React.createElement("button", {type: "button", className: "btn btn-primary", onClick: this.openCreateModal}, "New Record")
                ), 

                React.createElement("div", {className: "col-md-12"}, 
                    React.createElement("div", {className: "table-container"}, 
                        React.createElement("table", {id: "kamada_table", className: "table table-striped table-bordered", width: "100%"}, 
                            React.createElement("thead", null, 
                                React.createElement("tr", null, 
                                    React.createElement("th", null, "No"), 
                                    React.createElement("th", null, "Name"), 
                                    React.createElement("th", null, "Position"), 
                                    React.createElement("th", {className: "text-center"}, "Municipality"), 
                                    React.createElement("th", {className: "text-center"}, "Barangay"), 
                                    React.createElement("th", {className: "text-center"}, "Top Leader"), 
                                    React.createElement("th", {className: "text-center"}, "Last Update"), 
                                    React.createElement("th", {className: "text-center"}, "User"), 
                                    React.createElement("th", {width: "60px", className: "text-center"})
                                ), 
                               
                                React.createElement("tr", null, 
                                    React.createElement("td", null), 
                                    React.createElement("td", {style: { padding: "10px 5px"}}, 
                                        React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "voter_name", onChange: this.handleFilterChange})
                                    ), 
                                    React.createElement("td", null, 
                                        React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "voter_group", onChange: this.handleFilterChange})
                                    ), 
                                    React.createElement("td", {style: { padding: "10px 5px"}}, 
                                        React.createElement("select", {id: "municipality_select2", className: "form-control form-filter input-sm"}
                                        )
                                    ), 
                                    React.createElement("td", {style: { padding: "10px 5px"}}, 
                                        React.createElement("select", {id: "barangay_select2", className: "form-control form-filter input-sm"}
                                        )
                                    ), 
                                    React.createElement("td", null, 
                                        React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "cellphone", onChange: this.handleFilterChange})
                                    ), 
                                    React.createElement("td", null, 
                                        React.createElement("input", {type: "text", className: "form-control form-filter input-sm", name: "tl_voter_name", onChange: this.handleFilterChange})
                                    ), 
                                    React.createElement("td", null), 
                                    React.createElement("td", null), 
                                    React.createElement("td", null)
                                )
                            ), 
                            React.createElement("tbody", null
                            )
                        )
                    )
                )
            )
        )
    }
});

window.KamadaDatatable = KamadaDatatable;
var KamadaComponent = React.createClass({displayName: "KamadaComponent",
    render : function(){
        return (
            React.createElement("div", {className: "portlet light portlet-fit bordered"}, 
                React.createElement("div", {className: "portlet-body"}, 
                   React.createElement(KamadaDatatable, null)
                )
            )
        )
    }
});

setTimeout(function(){
    ReactDOM.render(
    React.createElement(KamadaComponent, null),
        document.getElementById('page-container')
    );
},500);
